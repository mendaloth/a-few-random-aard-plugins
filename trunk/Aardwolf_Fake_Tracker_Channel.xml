<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Wednesday, August 06, 2008, 1:13 PM -->
<!-- MuClient version 4.35 -->

<!-- Plugin "Consider_info" generated by Plugin Wizard -->

<muclient>
<plugin
   name="Aardwolf_Fake_Tracker_Channel"
   author="Mendaloth"
   id="9a386e25e87cd9ed2311c961"
   language="Lua"
   purpose="Allows use of a fake tracker channel, along with history"
   date_written="2008-10-15 07:35"
   requires="4.30"
   version="1.0"
   save_state="y"
   >
<description trim="y">
<![CDATA[
Aardwolf Fake Tracker Channel v 1.0

<=================== ACTIONS ===================>
tracker help                   --> Displays this message.                                 
tracker -h                     --> Displays up to 100 of the last tracker
                                 > channel messages.
tracker                        --> To use just set your tracker plugins to 
                                 > send to channel "tracker". 
								 

<==================== SETUP ====================>
1) Create a mudside alias using this command:
      "alias tracker echo {chan ch=tracker}@r[@RTracker@r]@w:"
  Note: You can change the color codes to whatever you like, but the {chan ch=tracker} 
     is required and must be a different color than the part after.


<========== WHY IS IT SETUP LIKE THIS?==========>
In case you are wondering why a plugin would require a mudside alias:
The mudside alias is the cleanest way to create this plugin. That way it will work
with all your existing plugins.  If it was a Mushclient alias all the existing
plugins that have channels set would need to send to Execute.

-------------------------------------------------
]]>
</description>

</plugin>


<!--  Triggers  -->

<triggers>
   <trigger
   match="{chan ch=tracker}*"
   script="ProcessTrackerMessage"
   send_to="10"
   sequence="100"
   enabled="y"
  >
  </trigger>
</triggers>

<aliases>	  
   <alias
   script="Print_Tracker_History"
   match="tracker -h"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  </alias>
  
  <alias
	match="tracker help"
	enabled="y"
	echo_alias="y"
	send_to="12"
	sequence="101">
		<send>
			Note(GetPluginInfo(GetPluginID(), 3))
		</send>
	</alias>  
  
</aliases>
<!--  Script  -->


<script>
<![CDATA[

tracker_history = {}

-- functions for handling Aardwolf color codes
-- required to send color codes to Fiendish's Chat window
-- the plugin id is the plugin code for Fiendish's chat window
-- Needed for StylesToColoursOneLine function


dofile(GetInfo (66) .. "\\worlds\\plugins\\" .. "aardwolf_colors.lua")

function OnPluginSaveState ()

end -- function OnPluginSaveState

function OnPluginInstall ()	
	
end

function ProcessTrackerMessage (name, line, wildcards, styles)
	--This part of the function sends the line to Fiendish's Chat Window Plugin
	-- and rmoves the chan=tracker part.
	local style_copy = {}
	
	for _, v in ipairs (styles) do
		if (v.text ~= "{chan ch=tracker}") then -- don't want to print the chan=tracker part
			table.insert(style_copy, v)
		end
	end -- for each style run
		
	local styles_to_colors = StylesToColoursOneLine(style_copy)
	CallPlugin("b555825a4a5700c35fa80780","storeFromOutside",styles_to_colors)
	
	--This stuff is for the tracker channel history function
	if (#tracker_history >= 100) then
		-- Only keep last 100 so add and remove.
		tracker_history = table.remove(tracker_history, 1)
		table.insert(tracker_history, style_copy)
	else
		table.insert(tracker_history, style_copy)
	end
end -- a

function Print_Tracker_History()
	require "tprint"
	if (tracker_history == nil) then
		Note("Tracker history is nil")
	else
		tprint(tracker_history)
		Note("")
	end
	
	for key, value in pairs(tracker_history) do
		styles = value
			for _, v in ipairs (styles) do
				--Borrowed this code from here: http://www.gammon.com.au/forum/bbshowpost.php?bbsubject_id=9713
				--Why must printing the same line with coloring be so complicated.
				 ColourTell (RGBColourToName (v.textcolour),
								RGBColourToName (v.backcolour),
								v.text)
			end -- for each style run
		Note("") -- needed to make a new line
	end 
end
]]>
</script>

</muclient>